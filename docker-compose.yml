version: '3.8'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  quarkussocial:
    image: jpralves/quarkus-social:latest
    container_name: quarkus-social
    ports:
      - 8082:8080

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"

  zookeeper:
    container_name: zookeeper_container1
    image: debezium/zookeeper:1.1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    container_name: kafka_container1
    image: debezium/kafka:1.1
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
  kafdrop:
    container_name: kafdrop_container1
    image: obsidiandynamics/kafdrop:3.24.0
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - 9000:9000
    depends_on:
      - kafka
